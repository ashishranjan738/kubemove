// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSync":          schema_pkg_apis_kubemove_v1alpha1_DataSync(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSyncSpec":      schema_pkg_apis_kubemove_v1alpha1_DataSyncSpec(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSyncStatus":    schema_pkg_apis_kubemove_v1alpha1_DataSyncStatus(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngine":        schema_pkg_apis_kubemove_v1alpha1_MoveEngine(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngineSpec":    schema_pkg_apis_kubemove_v1alpha1_MoveEngineSpec(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngineStatus":  schema_pkg_apis_kubemove_v1alpha1_MoveEngineStatus(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePair":          schema_pkg_apis_kubemove_v1alpha1_MovePair(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePairSpec":      schema_pkg_apis_kubemove_v1alpha1_MovePairSpec(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePairStatus":    schema_pkg_apis_kubemove_v1alpha1_MovePairStatus(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverse":       schema_pkg_apis_kubemove_v1alpha1_MoveReverse(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverseSpec":   schema_pkg_apis_kubemove_v1alpha1_MoveReverseSpec(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverseStatus": schema_pkg_apis_kubemove_v1alpha1_MoveReverseStatus(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitch":        schema_pkg_apis_kubemove_v1alpha1_MoveSwitch(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitchSpec":    schema_pkg_apis_kubemove_v1alpha1_MoveSwitchSpec(ref),
		"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitchStatus":  schema_pkg_apis_kubemove_v1alpha1_MoveSwitchStatus(ref),
	}
}

func schema_pkg_apis_kubemove_v1alpha1_DataSync(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "DataSync is the Schema for the datasyncs API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSyncSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSyncStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSyncSpec", "github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.DataSyncStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_DataSyncSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "DataSyncSpec defines the desired state of DataSync",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_DataSyncStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "DataSyncStatus defines the observed state of DataSync",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveEngine(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveEngine is the Schema for the moveengines API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngineSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngineStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngineSpec", "github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveEngineStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveEngineSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveEngineSpec defines the desired state of MoveEngine",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveEngineStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveEngineStatus defines the observed state of MoveEngine",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MovePair(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MovePair is the Schema for the movepairs API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePairSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePairStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePairSpec", "github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MovePairStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MovePairSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MovePairSpec defines the desired state of MovePair",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MovePairStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MovePairStatus defines the observed state of MovePair",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveReverse(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveReverse is the Schema for the movereverses API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverseSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverseStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverseSpec", "github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveReverseStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveReverseSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveReverseSpec defines the desired state of MoveReverse",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveReverseStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveReverseStatus defines the observed state of MoveReverse",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveSwitch(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveSwitch is the Schema for the moveswitches API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitchSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitchStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitchSpec", "github.com/kubemove/kubemove/pkg/apis/kubemove/v1alpha1.MoveSwitchStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveSwitchSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveSwitchSpec defines the desired state of MoveSwitch",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_kubemove_v1alpha1_MoveSwitchStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MoveSwitchStatus defines the observed state of MoveSwitch",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
